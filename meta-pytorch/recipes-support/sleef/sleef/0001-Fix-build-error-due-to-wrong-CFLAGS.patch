From 4366e645d675f5ae641cda523bbe7192b2c32c62 Mon Sep 17 00:00:00 2001
From: Hung Tran <hung.tran.jy@renesas.com>
Date: Wed, 18 Dec 2019 09:27:18 +0700
Subject: [PATCH] Fix build error due to wrong CFLAGS
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

There are some mistakes in handling CMAKE_C_FLAGS.
This cause many build error as below:

| /data2/hungdanhtran/yocto2.4/g1h_newmmp/tmp/work/x86_64-linux/sleef-native/1.0-r0/git/src/dft/mkunroll.c: In function ‘main’:
| /data2/hungdanhtran/yocto2.4/g1h_newmmp/tmp/work/x86_64-linux/sleef-native/1.0-r0/git/src/dft/mkunroll.c:54:3: error: ‘for’ loop initial declarations are only allowed in C99 mode
|    for(int config=0;config<CONFIGMAX;config++) {
|    ^
| /data2/hungdanhtran/yocto2.4/g1h_newmmp/tmp/work/x86_64-linux/sleef-native/1.0-r0/git/src/dft/mkunroll.c:54:3: note: use option -std=c99 or -std=gnu99 to compile your code
| /data2/hungdanhtran/yocto2.4/g1h_newmmp/tmp/work/x86_64-linux/sleef-native/1.0-r0/git/src/dft/mkunroll.c:58:5: error: ‘for’ loop initial declarations are only allowed in C99 mode
|      for(int isa=isastart;isa<argc;isa++) {
|      ^

Signed-off-by: Hung Tran <hung.tran.jy@renesas.com>
---
 Configure.cmake                | 2 +-
 src/common/CMakeLists.txt      | 2 +-
 src/dft-tester/CMakeLists.txt  | 3 +--
 src/dft/CMakeLists.txt         | 3 +--
 src/libm-tester/CMakeLists.txt | 3 +--
 src/libm/CMakeLists.txt        | 3 +--
 6 files changed, 6 insertions(+), 10 deletions(-)

diff --git a/Configure.cmake b/Configure.cmake
index a6a1994..bbb6881 100644
--- a/Configure.cmake
+++ b/Configure.cmake
@@ -376,7 +376,7 @@ CHECK_C_SOURCE_COMPILES("
 set(CMAKE_REQUIRED_FLAGS)
 
 # Save the default C flags
-set(ORG_CMAKE_C_FLAGS CMAKE_C_FLAGS)
+set(ORG_CMAKE_C_FLAGS ${CMAKE_C_FLAGS})
 
 # Check if sde64 command is available
 
diff --git a/src/common/CMakeLists.txt b/src/common/CMakeLists.txt
index f935898..e32260c 100644
--- a/src/common/CMakeLists.txt
+++ b/src/common/CMakeLists.txt
@@ -9,7 +9,7 @@ if (BUILD_SHARED_LIBS)
 endif()
 
 # This is a workaround of appveyor bug
-string(CONCAT CMAKE_C_FLAGS ${SLEEF_C_FLAGS})
+set(CMAKE_C_FLAGS "${ORG_CMAKE_C_FLAGS} ${SLEEF_C_FLAGS}")
 
 # Target TARGET_LIBCOMMON_OBJ
 
diff --git a/src/dft-tester/CMakeLists.txt b/src/dft-tester/CMakeLists.txt
index 10fbb8e..7fb3617 100644
--- a/src/dft-tester/CMakeLists.txt
+++ b/src/dft-tester/CMakeLists.txt
@@ -1,7 +1,6 @@
 # Compiler properties
 
-set(CMAKE_C_FLAGS ORG_CMAKE_C_FLAGS)
-string(CONCAT CMAKE_C_FLAGS ${DFT_C_FLAGS})
+set(CMAKE_C_FLAGS ${ORG_CMAKE_C_FLAGS} ${DFT_C_FLAGS})
 
 set(COMMON_TARGET_PROPERTIES 
   C_STANDARD 99                  # -std=gnu99
diff --git a/src/dft/CMakeLists.txt b/src/dft/CMakeLists.txt
index aa7c0ea..dd80812 100644
--- a/src/dft/CMakeLists.txt
+++ b/src/dft/CMakeLists.txt
@@ -18,8 +18,7 @@ option(SLEEFDFT_ENABLE_QUAD "Quad precision routines will be compiled in." OFF)
 
 # Compiler properties
 
-set(CMAKE_C_FLAGS ORG_CMAKE_C_FLAGS)
-string(CONCAT CMAKE_C_FLAGS ${DFT_C_FLAGS})
+set(CMAKE_C_FLAGS "${ORG_CMAKE_C_FLAGS} ${DFT_C_FLAGS}")
 set(COMMON_TARGET_PROPERTIES 
   C_STANDARD 99                  # -std=gnu99
   )
diff --git a/src/libm-tester/CMakeLists.txt b/src/libm-tester/CMakeLists.txt
index 95e8c1d..33edcc0 100644
--- a/src/libm-tester/CMakeLists.txt
+++ b/src/libm-tester/CMakeLists.txt
@@ -15,8 +15,7 @@ if (NOT LIBRT)
   set(LIBRT "")
 endif()
 
-set(CMAKE_C_FLAGS ORG_CMAKE_C_FLAGS)
-string(CONCAT CMAKE_C_FLAGS ${SLEEF_C_FLAGS})
+set(CMAKE_C_FLAGS "${ORG_CMAKE_C_FLAGS} ${SLEEF_C_FLAGS}")
 
 #
 
diff --git a/src/libm/CMakeLists.txt b/src/libm/CMakeLists.txt
index e61ef7e..43ebd59 100644
--- a/src/libm/CMakeLists.txt
+++ b/src/libm/CMakeLists.txt
@@ -2,8 +2,7 @@ file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/include/)
 include_directories(${CMAKE_CURRENT_BINARY_DIR}/include/)
 include_directories(${CMAKE_CURRENT_SOURCE_DIR})
 
-set(CMAKE_C_FLAGS ORG_CMAKE_C_FLAGS)
-string(CONCAT CMAKE_C_FLAGS ${SLEEF_C_FLAGS})
+set(CMAKE_C_FLAGS "${ORG_CMAKE_C_FLAGS} ${SLEEF_C_FLAGS}")
 
 set(EXT_ENABLE_ALIAS AVX512F ADVSIMD NEON32)
 
-- 
1.9.1

